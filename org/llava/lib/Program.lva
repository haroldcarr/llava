;;;;
;;;; Created       : 1998 Dec 06 (Sun) 09:29:56 by Harold Carr.
;;;; Last Modified : 2001 Mar 26 (Mon) 15:20:39 by Harold Carr.
;;;;

;; REVISIT - make aux functions internal (after define-syntax env fixed).
;; REVISIT - handle . args

;;;
;;; defineWithKeywords
;;;

(define-syntax define-with-keywords
  (lambda (functionNameAndKeywordNames . body)
    (let* ((functionName   (car functionNameAndKeywordNames))
	   (parameterNames (cdr functionNameAndKeywordNames))
	   (keywords       (map (lambda (keyword) (_%make-symbol ":" keyword))
				parameterNames))
	   (bodyFunctionName (_%make-symbol '_% functionName)))
      `(begin ,@(_%defineKeywords keywords)
	      ,(_%defineKeywordEntryFunction functionName bodyFunctionName keywords)
	      ,(_%defineBodyFunction bodyFunctionName parameterNames body)))))

(define _%defineKeywords 
  (lambda (keywords)
    (map (lambda (keyword) `(define ,keyword ',keyword)) keywords)))

(define _%defineKeywordEntryFunction 
  (lambda (functionName bodyFunctionName keywords)
    `(define (,functionName . args)
       (apply ,bodyFunctionName (_%listKeywordValues ',keywords args)))))

(define _%defineBodyFunction 
  (lambda (bodyFunctionName parameterNames body)
    `(define (,bodyFunctionName ,@parameterNames) ,@body)))

(define _%listKeywordValues
  (lambda (keywords args)
    (map (lambda (keyword) (_%keywordValue keyword args)) keywords)))


(define _%keywordValue
  (lambda (keyword args)
    (let ((keywordValue (memq keyword args)))
      (_if keywordValue
	   (cadr keywordValue)
	   false))))

(define (_%make-symbol . args)
  (_si 'newSymbol 'lavaProfile.F (apply string-append (map toString args))))

(provide 'lava/program/define-with-keywords)

;;; End of file.
