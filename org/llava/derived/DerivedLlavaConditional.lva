;;;; Copyright (c) 1997 - 2004 Harold Carr
;;;;
;;;; This work is licensed under the Creative Commons Attribution License.
;;;; To view a copy of this license, visit 
;;;;   http://creativecommons.org/licenses/by/2.0/
;;;; or send a letter to
;;;;   Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA
;;;;---------------------------------------------------------------------------

;;;;
;;;; Created       : 2000 Jan 18 (Tue) 04:24:10 by Harold Carr.
;;;; Last Modified : 2004 Nov 30 (Tue) 10:22:58 by Harold Carr.
;;;;

;;; Safe car and cdr.

(define -car (lambda (x) (if (null? x) '() (car x))))
(define -cdr (lambda (x) (if (null? x) '() (cdr x))))

;; REVISIT  handling of ==>
;; REVISIT collapse cadr s

(define-syntax cond 
  (lambda args  
    (if (null? args) 
	false 
	(if (equal? (-car (-car args)) 'else) 
	    (cons 'begin (-cdr (-car args))) 
	    (if (equal? (-car (-cdr (-car args))) '=>) 
		(list '(lambda (x e c) (-if x (e x) (c))) 
		      (-car (-car args)) 
		      (-car (-cdr (-cdr (-car args)))) 
		      (cons 'lambda (list () (cons 'cond (-cdr args))))) 
		(if (null? (-cdr (-car args))) 
		    (list '(lambda (x c) (-if x x (c))) 
			  (-car (-car args)) 
			  (cons 'lambda (list () (cons 'cond (-cdr args))))) 
		    (list '-if (-car (-car args)) 
			  (cons 'begin (-cdr (-car args))) 
			  (cons 'cond (-cdr args)))))))))

(define-syntax or
  (lambda args
    (if (null? args)
        false
        (cons 'cond (map list args)))))

(define-syntax and
  (lambda args
    (cond ((null? args) true)
	  ((null? (cdr args)) (car args))
	  (else (list '-if (car args) (cons 'and (cdr args)) false)))))

;;; End of file.

