;;;;
;;;; Created       : 2000 Jan 18 (Tue) 04:24:10 by Harold Carr.
;;;; Last Modified : 2000 Oct 29 (Sun) 21:54:49 by .
;;;;

;;; Safe car and cdr.

(define _%scar (lambda (x) (if (null? x) '() (car x))))
(define _%scdr (lambda (x) (if (null? x) '() (cdr x))))

;; REVISIT  handling of ==>
;; REVISIT collapse cadr s

(define-syntax cond 
  (lambda args  
    (if (null? args) 
	false 
	(if (equal? (_%scar (_%scar args)) 'else) 
	    (cons 'begin (_%scdr (_%scar args))) 
	    (if (equal? (_%scar (_%scdr (_%scar args))) '=>) 
		(list '(lambda (x e c) (_if x (e x) (c))) 
		      (_%scar (_%scar args)) 
		      (_%scar (_%scdr (_%scdr (_%scar args)))) 
		      (cons 'lambda (list () (cons 'cond (_%scdr args))))) 
		(if (null? (_%scdr (_%scar args))) 
		    (list '(lambda (x c) (_if x x (c))) 
			  (_%scar (_%scar args)) 
			  (cons 'lambda (list () (cons 'cond (_%scdr args))))) 
		    (list '_if (_%scar (_%scar args)) 
			  (cons 'begin (_%scdr (_%scar args))) 
			  (cons 'cond (_%scdr args)))))))))

(define-syntax or
  (lambda args
    (if (null? args)
        false
        (cons 'cond (map list args)))))

(define-syntax and
  (lambda args
    (cond ((null? args) true)
	  ((null? (cdr args)) (car args))
	  (else (list '_if (car args) (cons 'and (cdr args)) false)))))

;;; End of file.

