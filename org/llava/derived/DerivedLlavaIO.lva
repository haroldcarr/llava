;;;;
;;;; Created       : 1999 Dec 18 (Sat) 17:14:40 by Harold Carr.
;;;; Last Modified : 2004 Dec 11 (Sat) 09:43:53 by Harold Carr.
;;;;

(define (read)
  (-i 'read _%reader))

(define -read
  (lambda in
    (if (null? in)
        (-i 'read _%reader)
        (-i 'read _%reader (car in)))))

(define eof-object?
  (lambda (x)
    (equals (-i 'getEOFObject _%reader) x)))

(define (write msg . out)
  (if (null? out)
      (-i 'write _%writer msg)
      (-i 'write _%writer msg (car out)))
  msg)

(define -write
  (lambda (msg . out)
    (if (null? out)
	(-i 'write _%writer msg)
	(-i 'write _%writer msg (car out)))
    msg))

(define -writeln
  (lambda (msg . out)
    (if (null? out)
	(begin
	  (-i 'write _%writer msg)
	  (newline))
	(begin
	  (-i 'write _%writer msg (car out))
	  (newline (car out))))
    msg))

(define set-vector-print-length!
  (lambda (x)
    (-i 'setVectorPrintLength _%writer x)))

(define (display msg . out)
  (let ((n-msg (if (null? msg) "null" msg)))
    (if (null? out)
	(-i 'print (getPrintWriter _%writer) n-msg)
	(-i 'print (car out) n-msg)))
  msg)

(define -print
  (lambda (msg . out)
    (let ((n-msg (if (null? msg) "null" msg)))
      (if (null? out)
	  (-i 'print (getPrintWriter _%writer) n-msg)
	  (-i 'print (car out) n-msg)))
    msg))

(define -println
  (lambda (msg . out)
    (let ((n-msg (if (null? msg) "null" msg)))
      (if (null? out)
	  (begin
	    (-i 'print (getPrintWriter _%writer) n-msg)
	    (newline))
	  (begin
	    (-i 'print (car out) n-msg)
	    (newline (car out)))))
    msg))

(define (newline . out)
  (-i 'println (if (null? out) (getPrintWriter _%writer) (car out)))
  null)

;;; End of file.
